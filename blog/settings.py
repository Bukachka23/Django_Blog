"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path


BASE_DIR = Path(__file__).resolve().parent.parent


SECRET_KEY = "django-insecure--2qaj%jpjsz4zbul)x+^_h%mwx5@5r-^%=%low8^ec#d5adv)3"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []



# A list of strings representing the names of all Django applications that are enabled in this Django instance.
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "users",
    "core",
    "social_django",
]

# A list of strings representing the full Python import paths to call to get the URLconfs for each installed application.
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",

]

# The Python path to the URLconf module for this project.
ROOT_URLCONF = "blog.urls"

# A list of locations of the template source files, in search order.
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "social_django.context_processors.backends",
                "social_django.context_processors.login_redirect",
                "users.context_processors.search_form",

            ],
        },
    },
]

# The WSGI application object to use for running this Django project.
WSGI_APPLICATION = "blog.wsgi.application"




DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
}
}



# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]



# Internationalization
LANGUAGE_CODE = "en-us"

# A list of the time zone names for the time zones supported by Django.
TIME_ZONE = "UTC"

# A boolean that specifies whether Django’s translation system should be enabled.
USE_I18N = True

# A boolean that specifies whether Django’s localization system should be enabled.
USE_TZ = True

# A boolean that specifies whether Django’s system for serving static files should be enabled.
STATIC_URL = "static/"

# A boolean that specifies whether Django’s system for serving media files should be enabled.
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# The full Python import path to the default user model.
AUTH_USER_MODEL = 'users.User'

# The directory where static files are collected from.
MEDIA_ROOT = BASE_DIR / "media"

# The URL where requests are redirected for login, especially when using the login_required() decorator.
MEDIA_URL = "/media/"

#cThe email backend to use for sending emails.
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# The URL where requests are redirected for login, especially when using the login_required() decorator.
LOGIN_URL = "/users/login/"

# The URL where requests are redirected after login when the contrib.auth.login() view gets no next parameter.
STATICFILES_DIRS = (BASE_DIR / 'static',)

# The URL where requests are redirected after login when the contrib.auth.login() view gets no next parameter.
LOGIN_REDIRECT_URL = "/"

# The URL where requests are redirected after logout.
LOGOUT_REDIRECT_URL = "/"

# The client ID you get when you create a GitHub OAuth app.
SOCIAL_AUTH_GITHUB_KEY = os.environ.get("SOCIAL_AUTH_GITHUB_KEY")

# The client secret you get when you create a GitHub OAuth app.
SOCIAL_AUTH_GITHUB_SECRET = os.environ.get("SOCIAL_AUTH_GITHUB_SECRET")

